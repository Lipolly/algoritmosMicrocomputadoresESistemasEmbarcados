;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18/10/2023 09:54:33
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF46  	GOTO        1164
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x001C	0x0E21      	MOVLW       33
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0024	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0026	0x0E0F      	MOVLW       15
0x0028	0x6E0C      	MOVWF       R12, 0
0x002A	0x0E47      	MOVLW       71
0x002C	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x002E	0x2E0D      	DECFSZ      R13, 1, 0
0x0030	0xD7FE      	BRA         L_Delay_5500us5
0x0032	0x2E0C      	DECFSZ      R12, 1, 0
0x0034	0xD7FC      	BRA         L_Delay_5500us5
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x003A	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x003C	0x0000      	NOP
0x003E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0040	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0042	0xBE55      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x0044	0xD002      	BRA         L__Lcd_Cmd21
0x0046	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0048	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x004A	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x004C	0xBC55      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x004E	0xD002      	BRA         L__Lcd_Cmd23
0x0050	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0052	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0054	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0056	0xBA55      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x0058	0xD002      	BRA         L__Lcd_Cmd25
0x005A	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x005C	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x005E	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0060	0xB855      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x0062	0xD002      	BRA         L__Lcd_Cmd27
0x0064	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0066	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0068	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x006A	0xB04C      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x006C	0xD002      	BRA         L__Lcd_Cmd29
0x006E	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0070	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0072	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0074	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0076	0xDFE2      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0078	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x007A	0xB655      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x007C	0xD002      	BRA         L__Lcd_Cmd31
0x007E	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0080	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0082	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0084	0xB455      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x0086	0xD002      	BRA         L__Lcd_Cmd33
0x0088	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x008A	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x008C	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x008E	0xB255      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x0090	0xD002      	BRA         L__Lcd_Cmd35
0x0092	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0094	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0096	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0098	0xB055      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x009A	0xD002      	BRA         L__Lcd_Cmd37
0x009C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x009E	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00A0	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00A2	0xB04C      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00A4	0xD002      	BRA         L__Lcd_Cmd39
0x00A6	0x8484      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00A8	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00AA	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00AC	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00AE	0xDFC6      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B0	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00B2	0xA04C      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00B4	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00B6	0xDFB7      	RCALL       _Delay_5500us
0x00B8	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00BA	0xDFB0      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00BC	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00BE	0x904C      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x00C0	0xF055C054  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x00C4	0xDFBE      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00C6	0x804C      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00C8	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x00CA	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x00CC	0x0E80      	MOVLW       128
0x00CE	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
0x00D0	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x00D2	0x0EC0      	MOVLW       192
0x00D4	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
0x00D6	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x00D8	0x0E94      	MOVLW       148
0x00DA	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
0x00DC	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x00DE	0x0ED4      	MOVLW       212
0x00E0	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
0x00E2	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x00E4	0x0E80      	MOVLW       128
0x00E6	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x00E8	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x00EA	0x504F      	MOVF        FARG_Lcd_Out_row, 0 
0x00EC	0x0A01      	XORLW       1
0x00EE	0xE0EE      	BZ          L_Lcd_Out13
0x00F0	0x504F      	MOVF        FARG_Lcd_Out_row, 0 
0x00F2	0x0A02      	XORLW       2
0x00F4	0xE0EE      	BZ          L_Lcd_Out14
0x00F6	0x504F      	MOVF        FARG_Lcd_Out_row, 0 
0x00F8	0x0A03      	XORLW       3
0x00FA	0xE0EE      	BZ          L_Lcd_Out15
0x00FC	0x504F      	MOVF        FARG_Lcd_Out_row, 0 
0x00FE	0x0A04      	XORLW       4
0x0100	0xE0EE      	BZ          L_Lcd_Out16
0x0102	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0104	0x0450      	DECF        FARG_Lcd_Out_column, 0 
0x0106	0x6E00      	MOVWF       R0 
0x0108	0x504F      	MOVF        FARG_Lcd_Out_row, 0 
0x010A	0x2600      	ADDWF       R0, 1 
0x010C	0xF04FC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0110	0xF055C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0114	0xDF96      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0116	0x904C      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0118	0x6A53      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x011A	0x5053      	MOVF        Lcd_Out_i_L0, 0 
0x011C	0x2451      	ADDWF       FARG_Lcd_Out_text, 0 
0x011E	0x6EE9      	MOVWF       FSR0L 
0x0120	0x0E00      	MOVLW       0
0x0122	0x2052      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0124	0x6EEA      	MOVWF       FSR0H 
0x0126	0x52EE      	MOVF        POSTINC0, 1 
0x0128	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x012A	0x5053      	MOVF        Lcd_Out_i_L0, 0 
0x012C	0x2451      	ADDWF       FARG_Lcd_Out_text, 0 
0x012E	0x6EE9      	MOVWF       FSR0L 
0x0130	0x0E00      	MOVLW       0
0x0132	0x2052      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0134	0x6EEA      	MOVWF       FSR0H 
0x0136	0xF054CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x013A	0xDFC1      	RCALL       _Lcd_Chr_CP
0x013C	0x2A53      	INCF        Lcd_Out_i_L0, 1 
0x013E	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0140	0x804C      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0142	0x0012      	RETURN      0
; end of _Lcd_Out
_piscaLED:
;lcd.c,33 :: 		void piscaLED(){
;lcd.c,34 :: 		int i = 0;
0x0144	0x6A4D      	CLRF        piscaLED_i_L0 
0x0146	0x6A4E      	CLRF        piscaLED_i_L0+1 
;lcd.c,35 :: 		do{
L_piscaLED2:
;lcd.c,36 :: 		portd = 0;
0x0148	0x6A83      	CLRF        PORTD 
;lcd.c,37 :: 		delay_ms(1000);
0x014A	0x0E0B      	MOVLW       11
0x014C	0x6E0B      	MOVWF       R11, 0
0x014E	0x0E26      	MOVLW       38
0x0150	0x6E0C      	MOVWF       R12, 0
0x0152	0x0E5D      	MOVLW       93
0x0154	0x6E0D      	MOVWF       R13, 0
L_piscaLED5:
0x0156	0x2E0D      	DECFSZ      R13, 1, 0
0x0158	0xD7FE      	BRA         L_piscaLED5
0x015A	0x2E0C      	DECFSZ      R12, 1, 0
0x015C	0xD7FC      	BRA         L_piscaLED5
0x015E	0x2E0B      	DECFSZ      R11, 1, 0
0x0160	0xD7FA      	BRA         L_piscaLED5
0x0162	0x0000      	NOP
0x0164	0x0000      	NOP
;lcd.c,38 :: 		portd = 255;
0x0166	0x0EFF      	MOVLW       255
0x0168	0x6E83      	MOVWF       PORTD 
;lcd.c,39 :: 		delay_ms(1000);
0x016A	0x0E0B      	MOVLW       11
0x016C	0x6E0B      	MOVWF       R11, 0
0x016E	0x0E26      	MOVLW       38
0x0170	0x6E0C      	MOVWF       R12, 0
0x0172	0x0E5D      	MOVLW       93
0x0174	0x6E0D      	MOVWF       R13, 0
L_piscaLED6:
0x0176	0x2E0D      	DECFSZ      R13, 1, 0
0x0178	0xD7FE      	BRA         L_piscaLED6
0x017A	0x2E0C      	DECFSZ      R12, 1, 0
0x017C	0xD7FC      	BRA         L_piscaLED6
0x017E	0x2E0B      	DECFSZ      R11, 1, 0
0x0180	0xD7FA      	BRA         L_piscaLED6
0x0182	0x0000      	NOP
0x0184	0x0000      	NOP
;lcd.c,40 :: 		i = i+1;
0x0186	0x4A4D      	INFSNZ      piscaLED_i_L0, 1 
0x0188	0x2A4E      	INCF        piscaLED_i_L0+1, 1 
;lcd.c,41 :: 		}while(i <= 5);
0x018A	0x0E80      	MOVLW       128
0x018C	0x6E00      	MOVWF       R0 
0x018E	0x0E80      	MOVLW       128
0x0190	0x184E      	XORWF       piscaLED_i_L0+1, 0 
0x0192	0x5C00      	SUBWF       R0, 0 
0x0194	0xE102      	BNZ         L__piscaLED68
0x0196	0x504D      	MOVF        piscaLED_i_L0, 0 
0x0198	0x0805      	SUBLW       5
L__piscaLED68:
0x019A	0xE2D6      	BC          L_piscaLED2
;lcd.c,42 :: 		}
L_end_piscaLED:
0x019C	0x0012      	RETURN      0
; end of _piscaLED
_LCD:
;lcd.c,25 :: 		void LCD(char texto[16])
;lcd.c,27 :: 		Lcd_Cmd(_LCD_CLEAR);    //limpa o Display
0x019E	0x0E01      	MOVLW       1
0x01A0	0x6E55      	MOVWF       FARG_Lcd_Cmd_out_char 
0x01A2	0xDF4F      	RCALL       _Lcd_Cmd
;lcd.c,28 :: 		delay_ms(atraso);
0x01A4	0x0E82      	MOVLW       130
0x01A6	0x6E0C      	MOVWF       R12, 0
0x01A8	0x0EDD      	MOVLW       221
0x01AA	0x6E0D      	MOVWF       R13, 0
L_LCD0:
0x01AC	0x2E0D      	DECFSZ      R13, 1, 0
0x01AE	0xD7FE      	BRA         L_LCD0
0x01B0	0x2E0C      	DECFSZ      R12, 1, 0
0x01B2	0xD7FC      	BRA         L_LCD0
0x01B4	0x0000      	NOP
0x01B6	0x0000      	NOP
;lcd.c,29 :: 		Lcd_Out(1,4,texto);
0x01B8	0x0E01      	MOVLW       1
0x01BA	0x6E4F      	MOVWF       FARG_Lcd_Out_row 
0x01BC	0x0E04      	MOVLW       4
0x01BE	0x6E50      	MOVWF       FARG_Lcd_Out_column 
0x01C0	0xF051C04D  	MOVFF       FARG_LCD_texto, FARG_Lcd_Out_text
0x01C4	0xF052C04E  	MOVFF       FARG_LCD_texto+1, FARG_Lcd_Out_text+1
0x01C8	0xDF80      	RCALL       _Lcd_Out
;lcd.c,30 :: 		delay_ms(atraso);
0x01CA	0x0E82      	MOVLW       130
0x01CC	0x6E0C      	MOVWF       R12, 0
0x01CE	0x0EDD      	MOVLW       221
0x01D0	0x6E0D      	MOVWF       R13, 0
L_LCD1:
0x01D2	0x2E0D      	DECFSZ      R13, 1, 0
0x01D4	0xD7FE      	BRA         L_LCD1
0x01D6	0x2E0C      	DECFSZ      R12, 1, 0
0x01D8	0xD7FC      	BRA         L_LCD1
0x01DA	0x0000      	NOP
0x01DC	0x0000      	NOP
;lcd.c,31 :: 		}
L_end_LCD:
0x01DE	0x0012      	RETURN      0
; end of _LCD
_buzzer:
;lcd.c,113 :: 		void buzzer(){
;lcd.c,114 :: 		portc.rc1 = 0;
0x01E0	0x9282      	BCF         PORTC, 1 
;lcd.c,115 :: 		delay_ms(100);
0x01E2	0x0E02      	MOVLW       2
0x01E4	0x6E0B      	MOVWF       R11, 0
0x01E6	0x0E04      	MOVLW       4
0x01E8	0x6E0C      	MOVWF       R12, 0
0x01EA	0x0EBA      	MOVLW       186
0x01EC	0x6E0D      	MOVWF       R13, 0
L_buzzer34:
0x01EE	0x2E0D      	DECFSZ      R13, 1, 0
0x01F0	0xD7FE      	BRA         L_buzzer34
0x01F2	0x2E0C      	DECFSZ      R12, 1, 0
0x01F4	0xD7FC      	BRA         L_buzzer34
0x01F6	0x2E0B      	DECFSZ      R11, 1, 0
0x01F8	0xD7FA      	BRA         L_buzzer34
0x01FA	0x0000      	NOP
;lcd.c,116 :: 		portc.rc1 = 1;
0x01FC	0x8282      	BSF         PORTC, 1 
;lcd.c,117 :: 		}
L_end_buzzer:
0x01FE	0x0012      	RETURN      0
; end of _buzzer
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0200	0x9296      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0202	0x9496      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0204	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0206	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0208	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x020A	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x020C	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x020E	0x9484      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0210	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0212	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0214	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0216	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0218	0xDF06      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x021A	0xDF05      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x021C	0xDF04      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x021E	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0220	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0222	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0224	0xDF0B      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0226	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0228	0xDEFE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x022A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x022C	0xDF07      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x022E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0230	0xDEFA      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0232	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0234	0xDF03      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0236	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0238	0xDEF6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x023A	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x023C	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x023E	0xDEFE      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0240	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0242	0xDEF1      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0244	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0246	0xDEFA      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0248	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x024A	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x024C	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x024E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0250	0xDEF5      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0252	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0254	0xDEE8      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0256	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x0258	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x025A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x025C	0xDEEF      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x025E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0260	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0262	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0264	0xDEEB      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0266	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0268	0xDEDE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x026A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x026C	0xDEE7      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x026E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0270	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0272	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0274	0xDEE3      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0276	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0278	0xDED6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x027A	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x027C	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x027E	0xDEDE      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0280	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0282	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0284	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0286	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0288	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x028A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x028C	0xDED7      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x028E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0290	0xDECA      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0292	0x804C      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0294	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0296	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0298	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x029C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x029E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x02A0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x02A2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x02A4	0x0012      	RETURN      0
; end of ___CC2DW
_checagem:
;lcd.c,119 :: 		void checagem(){
;lcd.c,120 :: 		if(primeiroDigito == 7){
0x02A6	0x0E00      	MOVLW       0
0x02A8	0x1834      	XORWF       _primeiroDigito+1, 0 
0x02AA	0xE102      	BNZ         L__checagem72
0x02AC	0x0E07      	MOVLW       7
0x02AE	0x1833      	XORWF       _primeiroDigito, 0 
L__checagem72:
0x02B0	0xE120      	BNZ         L_checagem35
;lcd.c,121 :: 		if(segundoDigito == 0){
0x02B2	0x0E00      	MOVLW       0
0x02B4	0x1847      	XORWF       _segundoDigito+1, 0 
0x02B6	0xE102      	BNZ         L__checagem73
0x02B8	0x0E00      	MOVLW       0
0x02BA	0x1846      	XORWF       _segundoDigito, 0 
L__checagem73:
0x02BC	0xE116      	BNZ         L_checagem36
;lcd.c,122 :: 		if(terceiroDigito == 0){
0x02BE	0x0E00      	MOVLW       0
0x02C0	0x1849      	XORWF       _terceiroDigito+1, 0 
0x02C2	0xE102      	BNZ         L__checagem74
0x02C4	0x0E00      	MOVLW       0
0x02C6	0x1848      	XORWF       _terceiroDigito, 0 
L__checagem74:
0x02C8	0xE10C      	BNZ         L_checagem37
;lcd.c,123 :: 		if(quartoDigito == 1){
0x02CA	0x0E00      	MOVLW       0
0x02CC	0x184B      	XORWF       _quartoDigito+1, 0 
0x02CE	0xE102      	BNZ         L__checagem75
0x02D0	0x0E01      	MOVLW       1
0x02D2	0x184A      	XORWF       _quartoDigito, 0 
L__checagem75:
0x02D4	0xE102      	BNZ         L_checagem38
;lcd.c,124 :: 		piscaLED();
0x02D6	0xDF36      	RCALL       _piscaLED
;lcd.c,125 :: 		}
0x02D8	0xD003      	BRA         L_checagem39
L_checagem38:
;lcd.c,127 :: 		buzzer();
0x02DA	0xDF82      	RCALL       _buzzer
;lcd.c,128 :: 		digitando = 0;
0x02DC	0x6A35      	CLRF        _digitando 
0x02DE	0x6A36      	CLRF        _digitando+1 
;lcd.c,129 :: 		}
L_checagem39:
;lcd.c,130 :: 		}
0x02E0	0xD003      	BRA         L_checagem40
L_checagem37:
;lcd.c,132 :: 		buzzer();
0x02E2	0xDF7E      	RCALL       _buzzer
;lcd.c,133 :: 		digitando = 0;
0x02E4	0x6A35      	CLRF        _digitando 
0x02E6	0x6A36      	CLRF        _digitando+1 
;lcd.c,134 :: 		}
L_checagem40:
;lcd.c,135 :: 		}
0x02E8	0xD003      	BRA         L_checagem41
L_checagem36:
;lcd.c,137 :: 		buzzer();
0x02EA	0xDF7A      	RCALL       _buzzer
;lcd.c,138 :: 		digitando = 0;
0x02EC	0x6A35      	CLRF        _digitando 
0x02EE	0x6A36      	CLRF        _digitando+1 
;lcd.c,139 :: 		}
L_checagem41:
;lcd.c,140 :: 		}
0x02F0	0xD003      	BRA         L_checagem42
L_checagem35:
;lcd.c,142 :: 		buzzer();
0x02F2	0xDF76      	RCALL       _buzzer
;lcd.c,143 :: 		digitando = 0;
0x02F4	0x6A35      	CLRF        _digitando 
0x02F6	0x6A36      	CLRF        _digitando+1 
;lcd.c,144 :: 		}
L_checagem42:
;lcd.c,145 :: 		}
L_end_checagem:
0x02F8	0x0012      	RETURN      0
; end of _checagem
_teclado:
;lcd.c,44 :: 		int teclado(){
;lcd.c,45 :: 		portb.rb0 = 0;          //habilita primeira coluna  do teclado
0x02FA	0x9081      	BCF         PORTB, 0 
;lcd.c,46 :: 		delay_ms(atraso);
0x02FC	0x0E82      	MOVLW       130
0x02FE	0x6E0C      	MOVWF       R12, 0
0x0300	0x0EDD      	MOVLW       221
0x0302	0x6E0D      	MOVWF       R13, 0
L_teclado7:
0x0304	0x2E0D      	DECFSZ      R13, 1, 0
0x0306	0xD7FE      	BRA         L_teclado7
0x0308	0x2E0C      	DECFSZ      R12, 1, 0
0x030A	0xD7FC      	BRA         L_teclado7
0x030C	0x0000      	NOP
0x030E	0x0000      	NOP
;lcd.c,48 :: 		if (portd.rd0 == 0){
0x0310	0xB083      	BTFSC       PORTD, 0 
0x0312	0xD006      	BRA         L_teclado8
;lcd.c,49 :: 		LCD("<---");
0x0314	0x0E28      	MOVLW       ?lstr1_lcd
0x0316	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0318	0x0E00      	MOVLW       hi_addr(?lstr1_lcd)
0x031A	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x031C	0xDF40      	RCALL       _LCD
;lcd.c,50 :: 		}
0x031E	0xD024      	BRA         L_teclado9
L_teclado8:
;lcd.c,51 :: 		else if (portd.rd1 == 0){
0x0320	0xB283      	BTFSC       PORTD, 1 
0x0322	0xD00A      	BRA         L_teclado10
;lcd.c,52 :: 		LCD("7");
0x0324	0x0E26      	MOVLW       ?lstr2_lcd
0x0326	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0328	0x0E00      	MOVLW       hi_addr(?lstr2_lcd)
0x032A	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x032C	0xDF38      	RCALL       _LCD
;lcd.c,53 :: 		return 7;
0x032E	0x0E07      	MOVLW       7
0x0330	0x6E00      	MOVWF       R0 
0x0332	0x0E00      	MOVLW       0
0x0334	0x6E01      	MOVWF       R1 
0x0336	0xD0A9      	BRA         L_end_teclado
;lcd.c,54 :: 		}
L_teclado10:
;lcd.c,55 :: 		else if (portd.rd2 == 0){
0x0338	0xB483      	BTFSC       PORTD, 2 
0x033A	0xD00A      	BRA         L_teclado12
;lcd.c,56 :: 		LCD("4");
0x033C	0x0E24      	MOVLW       ?lstr3_lcd
0x033E	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0340	0x0E00      	MOVLW       hi_addr(?lstr3_lcd)
0x0342	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x0344	0xDF2C      	RCALL       _LCD
;lcd.c,57 :: 		return 4;
0x0346	0x0E04      	MOVLW       4
0x0348	0x6E00      	MOVWF       R0 
0x034A	0x0E00      	MOVLW       0
0x034C	0x6E01      	MOVWF       R1 
0x034E	0xD09D      	BRA         L_end_teclado
;lcd.c,58 :: 		}
L_teclado12:
;lcd.c,59 :: 		else if (portd.rd3 == 0){
0x0350	0xB683      	BTFSC       PORTD, 3 
0x0352	0xD00A      	BRA         L_teclado14
;lcd.c,60 :: 		LCD("1");
0x0354	0x0E31      	MOVLW       ?lstr4_lcd
0x0356	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0358	0x0E00      	MOVLW       hi_addr(?lstr4_lcd)
0x035A	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x035C	0xDF20      	RCALL       _LCD
;lcd.c,61 :: 		return 1;
0x035E	0x0E01      	MOVLW       1
0x0360	0x6E00      	MOVWF       R0 
0x0362	0x0E00      	MOVLW       0
0x0364	0x6E01      	MOVWF       R1 
0x0366	0xD091      	BRA         L_end_teclado
;lcd.c,62 :: 		}
L_teclado14:
L_teclado9:
;lcd.c,63 :: 		portb.rb0 = 1;          //desabilita primeira coluna do teclado
0x0368	0x8081      	BSF         PORTB, 0 
;lcd.c,64 :: 		delay_ms(atraso);
0x036A	0x0E82      	MOVLW       130
0x036C	0x6E0C      	MOVWF       R12, 0
0x036E	0x0EDD      	MOVLW       221
0x0370	0x6E0D      	MOVWF       R13, 0
L_teclado15:
0x0372	0x2E0D      	DECFSZ      R13, 1, 0
0x0374	0xD7FE      	BRA         L_teclado15
0x0376	0x2E0C      	DECFSZ      R12, 1, 0
0x0378	0xD7FC      	BRA         L_teclado15
0x037A	0x0000      	NOP
0x037C	0x0000      	NOP
;lcd.c,67 :: 		portb.rb1 = 0;          //habilita segunda coluna do teclado
0x037E	0x9281      	BCF         PORTB, 1 
;lcd.c,68 :: 		delay_ms(atraso);
0x0380	0x0E82      	MOVLW       130
0x0382	0x6E0C      	MOVWF       R12, 0
0x0384	0x0EDD      	MOVLW       221
0x0386	0x6E0D      	MOVWF       R13, 0
L_teclado16:
0x0388	0x2E0D      	DECFSZ      R13, 1, 0
0x038A	0xD7FE      	BRA         L_teclado16
0x038C	0x2E0C      	DECFSZ      R12, 1, 0
0x038E	0xD7FC      	BRA         L_teclado16
0x0390	0x0000      	NOP
0x0392	0x0000      	NOP
;lcd.c,70 :: 		if (portd.rd0 == 0){
0x0394	0xB083      	BTFSC       PORTD, 0 
0x0396	0xD008      	BRA         L_teclado17
;lcd.c,71 :: 		LCD("0");
0x0398	0x0E2F      	MOVLW       ?lstr5_lcd
0x039A	0x6E4D      	MOVWF       FARG_LCD_texto 
0x039C	0x0E00      	MOVLW       hi_addr(?lstr5_lcd)
0x039E	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x03A0	0xDEFE      	RCALL       _LCD
;lcd.c,72 :: 		return 0;
0x03A2	0x6A00      	CLRF        R0 
0x03A4	0x6A01      	CLRF        R1 
0x03A6	0xD071      	BRA         L_end_teclado
;lcd.c,73 :: 		}
L_teclado17:
;lcd.c,74 :: 		else if (portd.rd1 == 0){
0x03A8	0xB283      	BTFSC       PORTD, 1 
0x03AA	0xD00A      	BRA         L_teclado19
;lcd.c,75 :: 		LCD("8");
0x03AC	0x0E2D      	MOVLW       ?lstr6_lcd
0x03AE	0x6E4D      	MOVWF       FARG_LCD_texto 
0x03B0	0x0E00      	MOVLW       hi_addr(?lstr6_lcd)
0x03B2	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x03B4	0xDEF4      	RCALL       _LCD
;lcd.c,76 :: 		return 8;
0x03B6	0x0E08      	MOVLW       8
0x03B8	0x6E00      	MOVWF       R0 
0x03BA	0x0E00      	MOVLW       0
0x03BC	0x6E01      	MOVWF       R1 
0x03BE	0xD065      	BRA         L_end_teclado
;lcd.c,77 :: 		}
L_teclado19:
;lcd.c,78 :: 		else if (portd.rd2 == 0){
0x03C0	0xB483      	BTFSC       PORTD, 2 
0x03C2	0xD00A      	BRA         L_teclado21
;lcd.c,79 :: 		LCD("5");
0x03C4	0x0E1C      	MOVLW       ?lstr7_lcd
0x03C6	0x6E4D      	MOVWF       FARG_LCD_texto 
0x03C8	0x0E00      	MOVLW       hi_addr(?lstr7_lcd)
0x03CA	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x03CC	0xDEE8      	RCALL       _LCD
;lcd.c,80 :: 		return 5;
0x03CE	0x0E05      	MOVLW       5
0x03D0	0x6E00      	MOVWF       R0 
0x03D2	0x0E00      	MOVLW       0
0x03D4	0x6E01      	MOVWF       R1 
0x03D6	0xD059      	BRA         L_end_teclado
;lcd.c,81 :: 		}
L_teclado21:
;lcd.c,82 :: 		else if (portd.rd3 == 0){
0x03D8	0xB683      	BTFSC       PORTD, 3 
0x03DA	0xD00A      	BRA         L_teclado23
;lcd.c,83 :: 		LCD("2");
0x03DC	0x0E1A      	MOVLW       ?lstr8_lcd
0x03DE	0x6E4D      	MOVWF       FARG_LCD_texto 
0x03E0	0x0E00      	MOVLW       hi_addr(?lstr8_lcd)
0x03E2	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x03E4	0xDEDC      	RCALL       _LCD
;lcd.c,84 :: 		return 2;
0x03E6	0x0E02      	MOVLW       2
0x03E8	0x6E00      	MOVWF       R0 
0x03EA	0x0E00      	MOVLW       0
0x03EC	0x6E01      	MOVWF       R1 
0x03EE	0xD04D      	BRA         L_end_teclado
;lcd.c,85 :: 		}
L_teclado23:
;lcd.c,86 :: 		portb.rb1 = 1;          //desabilita segunda coluna do teclado
0x03F0	0x8281      	BSF         PORTB, 1 
;lcd.c,87 :: 		delay_ms(atraso);
0x03F2	0x0E82      	MOVLW       130
0x03F4	0x6E0C      	MOVWF       R12, 0
0x03F6	0x0EDD      	MOVLW       221
0x03F8	0x6E0D      	MOVWF       R13, 0
L_teclado24:
0x03FA	0x2E0D      	DECFSZ      R13, 1, 0
0x03FC	0xD7FE      	BRA         L_teclado24
0x03FE	0x2E0C      	DECFSZ      R12, 1, 0
0x0400	0xD7FC      	BRA         L_teclado24
0x0402	0x0000      	NOP
0x0404	0x0000      	NOP
;lcd.c,90 :: 		portb.rb2 = 0;         //habilita terceira coluna do teclado
0x0406	0x9481      	BCF         PORTB, 2 
;lcd.c,91 :: 		delay_ms(atraso);
0x0408	0x0E82      	MOVLW       130
0x040A	0x6E0C      	MOVWF       R12, 0
0x040C	0x0EDD      	MOVLW       221
0x040E	0x6E0D      	MOVWF       R13, 0
L_teclado25:
0x0410	0x2E0D      	DECFSZ      R13, 1, 0
0x0412	0xD7FE      	BRA         L_teclado25
0x0414	0x2E0C      	DECFSZ      R12, 1, 0
0x0416	0xD7FC      	BRA         L_teclado25
0x0418	0x0000      	NOP
0x041A	0x0000      	NOP
;lcd.c,93 :: 		if (portd.rd0 == 0){
0x041C	0xB083      	BTFSC       PORTD, 0 
0x041E	0xD006      	BRA         L_teclado26
;lcd.c,94 :: 		LCD("--->");
0x0420	0x0E15      	MOVLW       ?lstr9_lcd
0x0422	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0424	0x0E00      	MOVLW       hi_addr(?lstr9_lcd)
0x0426	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x0428	0xDEBA      	RCALL       _LCD
;lcd.c,95 :: 		}
0x042A	0xD024      	BRA         L_teclado27
L_teclado26:
;lcd.c,96 :: 		else if (portd.rd1 == 0){
0x042C	0xB283      	BTFSC       PORTD, 1 
0x042E	0xD00A      	BRA         L_teclado28
;lcd.c,97 :: 		LCD("9");
0x0430	0x0E22      	MOVLW       ?lstr10_lcd
0x0432	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0434	0x0E00      	MOVLW       hi_addr(?lstr10_lcd)
0x0436	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x0438	0xDEB2      	RCALL       _LCD
;lcd.c,98 :: 		return 9;
0x043A	0x0E09      	MOVLW       9
0x043C	0x6E00      	MOVWF       R0 
0x043E	0x0E00      	MOVLW       0
0x0440	0x6E01      	MOVWF       R1 
0x0442	0xD023      	BRA         L_end_teclado
;lcd.c,99 :: 		}
L_teclado28:
;lcd.c,100 :: 		else if (portd.rd2 == 0){
0x0444	0xB483      	BTFSC       PORTD, 2 
0x0446	0xD00A      	BRA         L_teclado30
;lcd.c,101 :: 		LCD("6");
0x0448	0x0E20      	MOVLW       ?lstr11_lcd
0x044A	0x6E4D      	MOVWF       FARG_LCD_texto 
0x044C	0x0E00      	MOVLW       hi_addr(?lstr11_lcd)
0x044E	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x0450	0xDEA6      	RCALL       _LCD
;lcd.c,102 :: 		return 6;
0x0452	0x0E06      	MOVLW       6
0x0454	0x6E00      	MOVWF       R0 
0x0456	0x0E00      	MOVLW       0
0x0458	0x6E01      	MOVWF       R1 
0x045A	0xD017      	BRA         L_end_teclado
;lcd.c,103 :: 		}
L_teclado30:
;lcd.c,104 :: 		else if (portd.rd3 == 0){
0x045C	0xB683      	BTFSC       PORTD, 3 
0x045E	0xD00A      	BRA         L_teclado32
;lcd.c,105 :: 		LCD("3");
0x0460	0x0E1E      	MOVLW       ?lstr12_lcd
0x0462	0x6E4D      	MOVWF       FARG_LCD_texto 
0x0464	0x0E00      	MOVLW       hi_addr(?lstr12_lcd)
0x0466	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x0468	0xDE9A      	RCALL       _LCD
;lcd.c,106 :: 		return 3;
0x046A	0x0E03      	MOVLW       3
0x046C	0x6E00      	MOVWF       R0 
0x046E	0x0E00      	MOVLW       0
0x0470	0x6E01      	MOVWF       R1 
0x0472	0xD00B      	BRA         L_end_teclado
;lcd.c,107 :: 		}
L_teclado32:
L_teclado27:
;lcd.c,108 :: 		portb.rb2 = 1;        //desabilita terceira coluna do teclado
0x0474	0x8481      	BSF         PORTB, 2 
;lcd.c,110 :: 		delay_ms(atraso);
0x0476	0x0E82      	MOVLW       130
0x0478	0x6E0C      	MOVWF       R12, 0
0x047A	0x0EDD      	MOVLW       221
0x047C	0x6E0D      	MOVWF       R13, 0
L_teclado33:
0x047E	0x2E0D      	DECFSZ      R13, 1, 0
0x0480	0xD7FE      	BRA         L_teclado33
0x0482	0x2E0C      	DECFSZ      R12, 1, 0
0x0484	0xD7FC      	BRA         L_teclado33
0x0486	0x0000      	NOP
0x0488	0x0000      	NOP
;lcd.c,111 :: 		}
L_end_teclado:
0x048A	0x0012      	RETURN      0
; end of _teclado
_main:
0x048C	0xF002ECED  	CALL        1498, 0
;lcd.c,147 :: 		void main(){
;lcd.c,148 :: 		ADCON0 = 0X00;     // Desabilita o conversor A/D
0x0490	0x6AC2      	CLRF        ADCON0 
;lcd.c,149 :: 		ADCON1 = 0x06;     // Configura todos pinos da porta A para digital
0x0492	0x0E06      	MOVLW       6
0x0494	0x6EC1      	MOVWF       ADCON1 
;lcd.c,151 :: 		trisd = 0x0F;      //configura os pinos RD0,RD1,RD2,RD3 da PORTD como
0x0496	0x0E0F      	MOVLW       15
0x0498	0x6E95      	MOVWF       TRISD 
;lcd.c,155 :: 		trisb = 0xF8;     // configura pinos RB0,RB1,RB2 da PORTB como saida (teclado)
0x049A	0x0EF8      	MOVLW       248
0x049C	0x6E93      	MOVWF       TRISB 
;lcd.c,157 :: 		portb = 0xFF;
0x049E	0x0EFF      	MOVLW       255
0x04A0	0x6E81      	MOVWF       PORTB 
;lcd.c,158 :: 		trisc = 0xFD;
0x04A2	0x0EFD      	MOVLW       253
0x04A4	0x6E94      	MOVWF       TRISC 
;lcd.c,160 :: 		Lcd_Init();                      //Inicializa o Display
0x04A6	0xDEAC      	RCALL       _Lcd_Init
;lcd.c,161 :: 		delay_ms(atraso);
0x04A8	0x0E82      	MOVLW       130
0x04AA	0x6E0C      	MOVWF       R12, 0
0x04AC	0x0EDD      	MOVLW       221
0x04AE	0x6E0D      	MOVWF       R13, 0
L_main43:
0x04B0	0x2E0D      	DECFSZ      R13, 1, 0
0x04B2	0xD7FE      	BRA         L_main43
0x04B4	0x2E0C      	DECFSZ      R12, 1, 0
0x04B6	0xD7FC      	BRA         L_main43
0x04B8	0x0000      	NOP
0x04BA	0x0000      	NOP
;lcd.c,162 :: 		Lcd_Cmd(_LCD_CLEAR);             //limpa o Display
0x04BC	0x0E01      	MOVLW       1
0x04BE	0x6E55      	MOVWF       FARG_Lcd_Cmd_out_char 
0x04C0	0xDDC0      	RCALL       _Lcd_Cmd
;lcd.c,163 :: 		delay_ms(atraso);
0x04C2	0x0E82      	MOVLW       130
0x04C4	0x6E0C      	MOVWF       R12, 0
0x04C6	0x0EDD      	MOVLW       221
0x04C8	0x6E0D      	MOVWF       R13, 0
L_main44:
0x04CA	0x2E0D      	DECFSZ      R13, 1, 0
0x04CC	0xD7FE      	BRA         L_main44
0x04CE	0x2E0C      	DECFSZ      R12, 1, 0
0x04D0	0xD7FC      	BRA         L_main44
0x04D2	0x0000      	NOP
0x04D4	0x0000      	NOP
;lcd.c,164 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);        //Desabilita o cursor
0x04D6	0x0E0C      	MOVLW       12
0x04D8	0x6E55      	MOVWF       FARG_Lcd_Cmd_out_char 
0x04DA	0xDDB3      	RCALL       _Lcd_Cmd
;lcd.c,165 :: 		delay_ms(atraso);
0x04DC	0x0E82      	MOVLW       130
0x04DE	0x6E0C      	MOVWF       R12, 0
0x04E0	0x0EDD      	MOVLW       221
0x04E2	0x6E0D      	MOVWF       R13, 0
L_main45:
0x04E4	0x2E0D      	DECFSZ      R13, 1, 0
0x04E6	0xD7FE      	BRA         L_main45
0x04E8	0x2E0C      	DECFSZ      R12, 1, 0
0x04EA	0xD7FC      	BRA         L_main45
0x04EC	0x0000      	NOP
0x04EE	0x0000      	NOP
;lcd.c,167 :: 		while(1){
L_main46:
;lcd.c,168 :: 		LCD("Digite a senha");
0x04F0	0x0E37      	MOVLW       ?lstr13_lcd
0x04F2	0x6E4D      	MOVWF       FARG_LCD_texto 
0x04F4	0x0E00      	MOVLW       hi_addr(?lstr13_lcd)
0x04F6	0x6E4E      	MOVWF       FARG_LCD_texto+1 
0x04F8	0xDE52      	RCALL       _LCD
;lcd.c,169 :: 		digitando = 1;
0x04FA	0x0E01      	MOVLW       1
0x04FC	0x6E35      	MOVWF       _digitando 
0x04FE	0x0E00      	MOVLW       0
0x0500	0x6E36      	MOVWF       _digitando+1 
;lcd.c,170 :: 		do{
L_main48:
;lcd.c,171 :: 		do{
L_main51:
;lcd.c,172 :: 		primeiroDigito = teclado();
0x0502	0xDEFB      	RCALL       _teclado
0x0504	0xF033C000  	MOVFF       R0, _primeiroDigito
0x0508	0xF034C001  	MOVFF       R1, _primeiroDigito+1
;lcd.c,173 :: 		}while(primeiroDigito == -1);
0x050C	0x0EFF      	MOVLW       255
0x050E	0x1801      	XORWF       R1, 0 
0x0510	0xE102      	BNZ         L__main77
0x0512	0x0EFF      	MOVLW       255
0x0514	0x1800      	XORWF       R0, 0 
L__main77:
0x0516	0xE0F5      	BZ          L_main51
;lcd.c,174 :: 		if(primeiroDigito >= 0){
0x0518	0x0E80      	MOVLW       128
0x051A	0x1834      	XORWF       _primeiroDigito+1, 0 
0x051C	0x6E00      	MOVWF       R0 
0x051E	0x0E80      	MOVLW       128
0x0520	0x5C00      	SUBWF       R0, 0 
0x0522	0xE102      	BNZ         L__main78
0x0524	0x0E00      	MOVLW       0
0x0526	0x5C33      	SUBWF       _primeiroDigito, 0 
L__main78:
0x0528	0xE333      	BNC         L_main54
;lcd.c,175 :: 		do{
L_main55:
;lcd.c,176 :: 		segundoDigito = teclado();
0x052A	0xDEE7      	RCALL       _teclado
0x052C	0xF046C000  	MOVFF       R0, _segundoDigito
0x0530	0xF047C001  	MOVFF       R1, _segundoDigito+1
;lcd.c,177 :: 		}while(segundoDigito == -1);
0x0534	0x0EFF      	MOVLW       255
0x0536	0x1801      	XORWF       R1, 0 
0x0538	0xE102      	BNZ         L__main79
0x053A	0x0EFF      	MOVLW       255
0x053C	0x1800      	XORWF       R0, 0 
L__main79:
0x053E	0xE0F5      	BZ          L_main55
;lcd.c,178 :: 		if(segundoDigito >= 0){
0x0540	0x0E80      	MOVLW       128
0x0542	0x1847      	XORWF       _segundoDigito+1, 0 
0x0544	0x6E00      	MOVWF       R0 
0x0546	0x0E80      	MOVLW       128
0x0548	0x5C00      	SUBWF       R0, 0 
0x054A	0xE102      	BNZ         L__main80
0x054C	0x0E00      	MOVLW       0
0x054E	0x5C46      	SUBWF       _segundoDigito, 0 
L__main80:
0x0550	0xE31F      	BNC         L_main58
;lcd.c,179 :: 		do{
L_main59:
;lcd.c,180 :: 		terceiroDigito = teclado();
0x0552	0xDED3      	RCALL       _teclado
0x0554	0xF048C000  	MOVFF       R0, _terceiroDigito
0x0558	0xF049C001  	MOVFF       R1, _terceiroDigito+1
;lcd.c,181 :: 		}while(terceiroDigito == -1);
0x055C	0x0EFF      	MOVLW       255
0x055E	0x1801      	XORWF       R1, 0 
0x0560	0xE102      	BNZ         L__main81
0x0562	0x0EFF      	MOVLW       255
0x0564	0x1800      	XORWF       R0, 0 
L__main81:
0x0566	0xE0F5      	BZ          L_main59
;lcd.c,182 :: 		if(terceiroDigito >= 0){
0x0568	0x0E80      	MOVLW       128
0x056A	0x1849      	XORWF       _terceiroDigito+1, 0 
0x056C	0x6E00      	MOVWF       R0 
0x056E	0x0E80      	MOVLW       128
0x0570	0x5C00      	SUBWF       R0, 0 
0x0572	0xE102      	BNZ         L__main82
0x0574	0x0E00      	MOVLW       0
0x0576	0x5C48      	SUBWF       _terceiroDigito, 0 
L__main82:
0x0578	0xE30B      	BNC         L_main62
;lcd.c,183 :: 		do{
L_main63:
;lcd.c,184 :: 		quartoDigito = teclado();
0x057A	0xDEBF      	RCALL       _teclado
0x057C	0xF04AC000  	MOVFF       R0, _quartoDigito
0x0580	0xF04BC001  	MOVFF       R1, _quartoDigito+1
;lcd.c,185 :: 		}while(quartoDigito == -1);
0x0584	0x0EFF      	MOVLW       255
0x0586	0x1801      	XORWF       R1, 0 
0x0588	0xE102      	BNZ         L__main83
0x058A	0x0EFF      	MOVLW       255
0x058C	0x1800      	XORWF       R0, 0 
L__main83:
0x058E	0xE0F5      	BZ          L_main63
;lcd.c,186 :: 		}
L_main62:
;lcd.c,187 :: 		}
L_main58:
;lcd.c,188 :: 		}
L_main54:
;lcd.c,189 :: 		checagem();
0x0590	0xDE8A      	RCALL       _checagem
;lcd.c,190 :: 		}while(digitando == 1);
0x0592	0x0E00      	MOVLW       0
0x0594	0x1836      	XORWF       _digitando+1, 0 
0x0596	0xE102      	BNZ         L__main84
0x0598	0x0E01      	MOVLW       1
0x059A	0x1835      	XORWF       _digitando, 0 
L__main84:
0x059C	0xE0B2      	BZ          L_main48
;lcd.c,191 :: 		}
0x059E	0xD7A8      	BRA         L_main46
;lcd.c,192 :: 		}
L_end_main:
0x05A0	0xD7FF      	BRA         $+0
; end of _main
0x05DA	0xF015EE10  	LFSR        1, 21
0x05DE	0x0E37      	MOVLW       55
0x05E0	0x6E00      	MOVWF       R0 
0x05E2	0x0E01      	MOVLW       1
0x05E4	0x6E01      	MOVWF       R1 
0x05E6	0x0EA2      	MOVLW       162
0x05E8	0x6EF6      	MOVWF       4086 
0x05EA	0x0E05      	MOVLW       5
0x05EC	0x6EF7      	MOVWF       TBLPTRH 
0x05EE	0x0E00      	MOVLW       0
0x05F0	0x6EF8      	MOVWF       TBLPTRU 
0x05F2	0xF001EC4B  	CALL        662, 0
0x05F6	0x0012      	RETURN      0
;lcd.c,0 :: ?ICS?lstr9_lcd
0x05A2	0x2D2D ;?ICS?lstr9_lcd+0
0x05A4	0x3E2D ;?ICS?lstr9_lcd+2
0x05A6	0x00 ;?ICS?lstr9_lcd+4
; end of ?ICS?lstr9_lcd
;lcd.c,0 :: ?ICS?lstr8_lcd
0x05A7	0x0032 ;?ICS?lstr8_lcd+0
; end of ?ICS?lstr8_lcd
;lcd.c,0 :: ?ICS?lstr7_lcd
0x05A9	0x0035 ;?ICS?lstr7_lcd+0
; end of ?ICS?lstr7_lcd
;lcd.c,0 :: ?ICS?lstr12_lcd
0x05AB	0x0033 ;?ICS?lstr12_lcd+0
; end of ?ICS?lstr12_lcd
;lcd.c,0 :: ?ICS?lstr11_lcd
0x05AD	0x0036 ;?ICS?lstr11_lcd+0
; end of ?ICS?lstr11_lcd
;lcd.c,0 :: ?ICS?lstr10_lcd
0x05AF	0x0039 ;?ICS?lstr10_lcd+0
; end of ?ICS?lstr10_lcd
;lcd.c,0 :: ?ICS?lstr3_lcd
0x05B1	0x0034 ;?ICS?lstr3_lcd+0
; end of ?ICS?lstr3_lcd
;lcd.c,0 :: ?ICS?lstr2_lcd
0x05B3	0x0037 ;?ICS?lstr2_lcd+0
; end of ?ICS?lstr2_lcd
;lcd.c,0 :: ?ICS?lstr1_lcd
0x05B5	0x2D3C ;?ICS?lstr1_lcd+0
0x05B7	0x2D2D ;?ICS?lstr1_lcd+2
0x05B9	0x00 ;?ICS?lstr1_lcd+4
; end of ?ICS?lstr1_lcd
;lcd.c,0 :: ?ICS?lstr6_lcd
0x05BA	0x0038 ;?ICS?lstr6_lcd+0
; end of ?ICS?lstr6_lcd
;lcd.c,0 :: ?ICS?lstr5_lcd
0x05BC	0x0030 ;?ICS?lstr5_lcd+0
; end of ?ICS?lstr5_lcd
;lcd.c,0 :: ?ICS?lstr4_lcd
0x05BE	0x0031 ;?ICS?lstr4_lcd+0
; end of ?ICS?lstr4_lcd
;lcd.c,0 :: ?ICS_primeiroDigito
0x05C0	0xFFFF ;?ICS_primeiroDigito+0
; end of ?ICS_primeiroDigito
;lcd.c,0 :: ?ICS_digitando
0x05C2	0x0001 ;?ICS_digitando+0
; end of ?ICS_digitando
;lcd.c,0 :: ?ICS?lstr13_lcd
0x05C4	0x6944 ;?ICS?lstr13_lcd+0
0x05C6	0x6967 ;?ICS?lstr13_lcd+2
0x05C8	0x6574 ;?ICS?lstr13_lcd+4
0x05CA	0x6120 ;?ICS?lstr13_lcd+6
0x05CC	0x7320 ;?ICS?lstr13_lcd+8
0x05CE	0x6E65 ;?ICS?lstr13_lcd+10
0x05D0	0x6168 ;?ICS?lstr13_lcd+12
0x05D2	0x00 ;?ICS?lstr13_lcd+14
; end of ?ICS?lstr13_lcd
;lcd.c,0 :: ?ICS_segundoDigito
0x05D3	0xFFFF ;?ICS_segundoDigito+0
; end of ?ICS_segundoDigito
;lcd.c,0 :: ?ICS_terceiroDigito
0x05D5	0xFFFF ;?ICS_terceiroDigito+0
; end of ?ICS_terceiroDigito
;lcd.c,0 :: ?ICS_quartoDigito
0x05D7	0xFFFF ;?ICS_quartoDigito+0
; end of ?ICS_quartoDigito
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [10]    _Delay_50us
0x0026      [22]    _Delay_5500us
0x003C       [6]    _Delay_1us
0x0042     [124]    _Lcd_Cmd
0x00BE      [12]    _Lcd_Chr_CP
0x00CA     [122]    _Lcd_Out
0x0144      [90]    _piscaLED
0x019E      [66]    _LCD
0x01E0      [32]    _buzzer
0x0200     [150]    _Lcd_Init
0x0296      [16]    ___CC2DW
0x02A6      [84]    _checagem
0x02FA     [402]    _teclado
0x048C     [278]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [5]    ?lstr9_lcd
0x001A       [2]    ?lstr8_lcd
0x001C       [2]    ?lstr7_lcd
0x001E       [2]    ?lstr12_lcd
0x0020       [2]    ?lstr11_lcd
0x0022       [2]    ?lstr10_lcd
0x0024       [2]    ?lstr3_lcd
0x0026       [2]    ?lstr2_lcd
0x0028       [5]    ?lstr1_lcd
0x002D       [2]    ?lstr6_lcd
0x002F       [2]    ?lstr5_lcd
0x0031       [2]    ?lstr4_lcd
0x0033       [2]    _primeiroDigito
0x0035       [2]    _digitando
0x0037      [15]    ?lstr13_lcd
0x0046       [2]    _segundoDigito
0x0048       [2]    _terceiroDigito
0x004A       [2]    _quartoDigito
0x004C       [0]    __Lib_Lcd_cmd_status
0x004D       [2]    FARG_LCD_texto
0x004D       [2]    piscaLED_i_L0
0x004F       [1]    FARG_Lcd_Out_row
0x0050       [1]    FARG_Lcd_Out_column
0x0051       [2]    FARG_Lcd_Out_text
0x0053       [1]    Lcd_Out_i_L0
0x0054       [1]    FARG_Lcd_Chr_CP_out_char
0x0055       [1]    FARG_Lcd_Cmd_out_char
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F83       [0]    LCD_D7
0x0F83       [1]    PORTD
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    LCD_D4
0x0F83       [0]    LCD_D5
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    LCD_D6
0x0F84       [0]    LCD_RS
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    LCD_EN
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [1]    TRISD
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    LCD_EN_Direction
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x05A2       [5]    ?ICS?lstr9_lcd
0x05A7       [2]    ?ICS?lstr8_lcd
0x05A9       [2]    ?ICS?lstr7_lcd
0x05AB       [2]    ?ICS?lstr12_lcd
0x05AD       [2]    ?ICS?lstr11_lcd
0x05AF       [2]    ?ICS?lstr10_lcd
0x05B1       [2]    ?ICS?lstr3_lcd
0x05B3       [2]    ?ICS?lstr2_lcd
0x05B5       [5]    ?ICS?lstr1_lcd
0x05BA       [2]    ?ICS?lstr6_lcd
0x05BC       [2]    ?ICS?lstr5_lcd
0x05BE       [2]    ?ICS?lstr4_lcd
0x05C0       [2]    ?ICS_primeiroDigito
0x05C2       [2]    ?ICS_digitando
0x05C4      [15]    ?ICS?lstr13_lcd
0x05D3       [2]    ?ICS_segundoDigito
0x05D5       [2]    ?ICS_terceiroDigito
0x05D7       [2]    ?ICS_quartoDigito
//** Label List: ** 
//----------------------------------------------
  L_LCD0
  L_LCD1
  L_piscaLED2
  L_piscaLED3
  L_piscaLED4
  L_piscaLED5
  L_piscaLED6
  L_teclado7
  L_teclado8
  L_teclado9
  L_teclado10
  L_teclado11
  L_teclado12
  L_teclado13
  L_teclado14
  L_teclado15
  L_teclado16
  L_teclado17
  L_teclado18
  L_teclado19
  L_teclado20
  L_teclado21
  L_teclado22
  L_teclado23
  L_teclado24
  L_teclado25
  L_teclado26
  L_teclado27
  L_teclado28
  L_teclado29
  L_teclado30
  L_teclado31
  L_teclado32
  L_teclado33
  L_buzzer34
  L_checagem35
  L_checagem36
  L_checagem37
  L_checagem38
  L_checagem39
  L_checagem40
  L_checagem41
  L_checagem42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L_main63
  L_main64
  L_main65
  L_end_LCD
  _LCD
  L_end_piscaLED
  _piscaLED
  L__piscaLED68
  L_end_teclado
  _teclado
  L_end_buzzer
  _buzzer
  L_end_checagem
  _checagem
  L__checagem72
  L__checagem73
  L__checagem74
  L__checagem75
  L_end_main
  _main
  L__main77
  L__main78
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end____Boot_Delay4k
  ____Boot_Delay4k
  L_end____Boot_Delay8k
  ____Boot_Delay8k
  L_end____Boot_Delay12k
  ____Boot_Delay12k
  L_end____Boot_Delay16k
  ____Boot_Delay16k
  L_end____Boot_Delay24k
  ____Boot_Delay24k
  L_end____Boot_Delay32k
  ____Boot_Delay32k
  L_end____Boot_Delay48k
  ____Boot_Delay48k
  L_end____Boot_Delay64k
  ____Boot_Delay64k
  L_end____Boot_Delay128k
  ____Boot_Delay128k
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms54
  L__VDelay_ms55
  L__VDelay_ms56
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms58
  L__VDelay_Advanced_ms59
  L__VDelay_Advanced_ms60
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
